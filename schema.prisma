generator client {
  provider = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource DATABASE_URL {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Block {
  id      Int     @id @default(autoincrement())
  name    String?
  eventId String? @map("event_id")
  hallId  String @map("hall_id")
  isWall  Boolean @map("is_wall")
  event Event?  @relation(fields: [eventId], references: [id])
  hall  Hall    @relation(fields: [hallId], references: [id])
  spaceViews SpaceView[]

  @@map("block")
  @@index([eventId])
  @@index([hallId])
}

model Circle {
  id        Int     @id @default(autoincrement())
  author    String?
  hpUrl     String? @map("hp_url")
  name      String?
  pixivUrl  String? @map("pixiv_url")
  twitterId String? @map("twitter_id")
  spaceViews SpaceView[]

  @@map("circle")
}

model Day {
  id       Int     @id @default(autoincrement())
  dayCount Int    @map("day_count")
  eventId  String? @map("event_id")
  event Event?  @relation(fields: [eventId], references: [id])
  spaceViews SpaceView[]

  @@map("day")
  @@index([eventId])
}

model Event {
  id        String    @id
  eventName String?  @map("event_name")
  venueId   Int?   @map("venue_id")
  lastDate  DateTime? @map("last_date")
  startDate DateTime? @map("start_date")
  url       String?
  blocks Block[]
  days   Day[]
  venue  Venue?  @relation(fields: [venueId], references: [id])

  @@map("event")
  @@index([venueId])
}

model FfUser {
  id          String     @id
  follower    Boolean    @default(false)
  following   Boolean    @default(false)
  name        String?
  twitterid   String?   @map("twitter_id")
  loginUser   LoginUser? @relation(fields: [loginUserId], references: [id]) 
  loginUserId String?

  @@map("ff_user")
  @@index([loginUserId])
}

model Hall {
  id    String  @id
  name  String  @unique
  use  Boolean
  blocks Block[]

  @@map("hall")
}

model LoginUser {
  id              String    @id
  displayedName   String?  @map("displayed_name")
  name            String?
  profileImageUrl String? @map("profile_image_url")
  lastUpdate      DateTime? @map("last_update")
  ffUsers FfUser[]

  @@map("login_user")
}

model Tweet {
  id         Int       @id @default(autoincrement())
  text       String?
  spaceId    Int?     @map("space_id")
  url        String?
  authorName String? @map("author_name")
  authorId   String? @map("author_id")
  createdAt  DateTime? @map("created_at")
  favs       Int
  retweets   Int
  error      Boolean
  spaceView SpaceView?

  @@map("tweet")
  @@index([spaceId])
}

model Venue {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  events Event[]

  @@map("venue")
}

view SpaceView {
  id            Int     @id
  ab            String?
  genre         String?
  spaceNumber   Int    @map("space_number")
  webcatalogUrl String? @map("webcatalog_url")
  blockId       Int?   @map("block_id")
  circleId      Int?  @map("circle_id")
  dayId         Int?   @map("day_id")
  tweetId       Int?   @map("tweet_id") @unique
  block  Block?  @relation(fields: [blockId], references: [id])
  circle Circle? @relation(fields: [circleId], references: [id])
  day    Day?    @relation(fields: [dayId], references: [id])
  tweet Tweet?  @relation(fields: [tweetId], references: [id])

  @@map("space_view")
  @@index([blockId])
  @@index([circleId])
  @@index([dayId])
  @@index([tweetId])
}
